<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.ac.bcc.mapper.core.ResourcesMapper" >
  <resultMap id="BaseResultMap" type="cn.ac.bcc.model.core.Resources" >
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parentId" property="parentid" jdbcType="INTEGER" />
    <result column="parentName" property="parentname" jdbcType="VARCHAR" />
    <result column="resKey" property="reskey" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="resUrl" property="resurl" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="ishide" property="ishide" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="selectId">
		id,
		name,
		parentId,
		(select r.name from bcc_resources r where r.id = bcc_resources.parentId )
		parentName,
		resKey,
		ishide,
		type,
		resUrl,
		level,
		icon,
		description
	</sql>
	<select id="findChildlists" resultMap="BaseResultMap">
		SELECT
		<include refid="selectId" />
		from bcc_resources
		where parentId = #{id}
	</select>
	<!-- 获取该用户的权限 -->
	<select id="findChildResourcesByUser" parameterType="String" resultMap="BaseResultMap">
		SELECT
		<include refid="selectId" />
		from bcc_resources where id in(
		select resId from
		bcc_res_role where 1=1
		<if test="roleId != null and roleId != '' and roleId != 0">
		and roleId = #{roleId}
		</if>
		<if test="userId != null and userId != '' and userId != 0">
		and roleId in (
		      SELECT roleId from bcc_user_role where userId = #{userId}
		   )
		</if>
		)
		<if test="parentId != null and parentId != '' and parentId != 0">
			and parentId = #{parentId}
		</if>
		order by level asc
	</select>
	<!-- 查询该用户的权限 -->
	<select id="selectResourcesByUser" parameterType="cn.ac.bcc.model.core.Resources" resultMap="BaseResultMap">
		SELECT
		<include refid="selectId" />
		from bcc_resources where 1=1
		  <if test="res.parentid != null and res.parentid != '' and res.parentid != 0">
			and parentId = #{res.parentid}
		  </if>
		  <if test="res.name != null">
	        and name = #{res.name,jdbcType=VARCHAR}
	      </if>
	      <if test="res.reskey != null">
	        and resKey = #{res.reskey,jdbcType=VARCHAR}
	      </if>
	      <if test="res.ishide != null">
	        and ishide = #{res.ishide,jdbcType=INTEGER}
	      </if>
	      <if test="res.type != null">
	        and type = #{res.type,jdbcType=VARCHAR}
	      </if>
	      <if test="res.resurl != null">
	        and resUrl = #{res.resurl,jdbcType=VARCHAR}
	      </if>
	      <if test="res.level != null">
	        and level = #{res.level,jdbcType=INTEGER}
	      </if>
	      <if test="res.description != null">
	        and description = #{res.description,jdbcType=VARCHAR}
	      </if>
		order by parentId asc,level asc
	</select>

	<!-- 根据账号Id获取该用户的权限 -->
	<select id="findUserResourcess" parameterType="String"
		resultMap="BaseResultMap">
		SELECT
		<include refid="selectId" />
		from bcc_resources where id in(
		select resId from bcc_res_role
		where roleId in (
		      SELECT roleId from bcc_user_role where userId = #{userId}
		   ))
	</select>

	<!-- 根据roleId获取该角色的权限 -->
	<select id="selectResourceByRoleId" parameterType="Integer"
			resultMap="BaseResultMap">
		SELECT
		<include refid="selectId" />
		from bcc_resources where id in(
		select resId from bcc_res_role
		where roleId = #{roleId}
		)
	</select>
	<update id="updateSortOrder" parameterType="java.util.List">
          <foreach collection="list" item="item" index="index" open="" close="" separator=";">
                update bcc_resources
                <set>
                  level = #{item.level}
                </set>
                where id = #{item.id}
         </foreach>
	</update>
	<!-- 删 -->
	<delete id="deleteResourcesRole" parameterType="String">
		delete from
		bcc_res_roles
		where role_id=#{id}
	</delete>

	<insert id="addRoleRes">
		insert into bcc_res_roles (role_id,resc_id) value (#{roleId},#{resId})
	</insert>

	<select id="getMaxLevel" resultType="java.lang.Integer">
		SELECT max(resources_level) FROM bcc_resources
	</select>


</mapper>